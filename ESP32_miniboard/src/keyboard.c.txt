keyboard.c.txt
#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// OLED Config
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Shift Register Pins
#define DATA_PIN 7
#define CLOCK_PIN 6
#define LATCH_PIN 5

// MUX Pins
#define S0 0
#define S1 1
#define S2 3

// MUX Output
#define MUX_INPUT 4

#define HIGH_THRESHOLD 3000

// Keypad layout
const char keys[4][3] = {
  {'1', '2', '3'},
  {'4', '5', '6'},
  {'7', '8', '9'},
  {'*', '0', '#'}
};

// Key state tracking
bool keyPressedState[4][3] = {false};

// Input buffer
String inputBuffer = "";

void activateShiftRegisterOutput(uint8_t bitIndex) {
  uint8_t val = 1 << bitIndex;

  digitalWrite(LATCH_PIN, LOW);
  for (int i = 7; i >= 0; i--) {
    digitalWrite(CLOCK_PIN, LOW);
    digitalWrite(DATA_PIN, (val >> i) & 0x01);
    digitalWrite(CLOCK_PIN, HIGH);
  }
  digitalWrite(LATCH_PIN, HIGH);
}

int readMuxRow(int row) {
  digitalWrite(S0, row & 0x01);
  digitalWrite(S1, (row >> 1) & 0x01);
  digitalWrite(S2, (row >> 2) & 0x01);
  delayMicroseconds(100);
  return analogRead(MUX_INPUT);
}

void displayText(String text) {
  display.clearDisplay();
  display.setTextSize(3);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 10);
  display.print(text);
  display.display();
}

void resetInput() {
  inputBuffer = "";
  displayText("RESET");
  delay(500);
  displayText("");
}

void setup() {
  pinMode(DATA_PIN, OUTPUT);
  pinMode(CLOCK_PIN, OUTPUT);
  pinMode(LATCH_PIN, OUTPUT);

  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);

  pinMode(MUX_INPUT, INPUT);

  Serial.begin(115200);
  Wire.begin();  // Start I2C

  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("Eroare: nu s-a gÄƒsit display-ul SSD1306!"));
    while (true);
  }

  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 10);
  display.println("Start");
  display.display();
  delay(1000);
  display.clearDisplay();
  display.display();
}

void loop() {
  for (int col = 0; col < 3; col++) {
    int shiftBit = col + 1;
    activateShiftRegisterOutput(shiftBit);

    for (int row = 0; row < 4; row++) {
      int val = readMuxRow(row);
      bool isPressed = val > HIGH_THRESHOLD;

      if (isPressed && !keyPressedState[row][col]) {
        char key = keys[row][col];
        keyPressedState[row][col] = true;

        if (key == '*') {
          resetInput();
        } else if (inputBuffer.length() < 7 && isdigit(key)) {
          inputBuffer += key;
          displayText(inputBuffer);

          if (inputBuffer.length() == 7) {
            delay(1000);  // Let user admire their typing
            resetInput();
          }
        }
      } else if (!isPressed && keyPressedState[row][col]) {
        keyPressedState[row][col] = false;  // key released
      }
    }

    delay(5);
  }

  delay(5);
}
